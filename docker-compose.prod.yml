version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./services/api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - DOCUMENT_PROCESSING_URL=http://document-processing:3001
      - CHAT_API_URL=http://chat-api:3002
      - FILE_STORAGE_URL=http://file-storage:3003
      - AI_INTEGRATION_URL=http://ai-integration:3004
      - VECTOR_DB_URL=http://vector-db:3005
    depends_on:
      - document-processing
      - chat-api
      - file-storage
      - ai-integration
      - vector-db
    restart: unless-stopped
    networks:
      - smart-reader-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Document Processing Service
  document-processing:
    build: ./services/document-processing
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - UPLOAD_DIR=/app/uploads
    depends_on:
      - mongodb
      - redis
    volumes:
      - uploads_data:/app/uploads
    restart: unless-stopped
    networks:
      - smart-reader-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Chat API Service
  chat-api:
    build: ./services/chat-api
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - REDIS_URL=${REDIS_URL}
      - AI_INTEGRATION_URL=http://ai-integration:3004
    depends_on:
      - mongodb
      - redis
      - ai-integration
    restart: unless-stopped
    networks:
      - smart-reader-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # File Storage Service
  file-storage:
    build: ./services/file-storage
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - UPLOAD_DIR=/app/uploads
      - CACHE_DIR=/app/cache
    depends_on:
      - mongodb
    volumes:
      - uploads_data:/app/uploads
      - cache_data:/app/cache
    restart: unless-stopped
    networks:
      - smart-reader-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # AI Integration Service
  ai-integration:
    build: ./services/ai-integration
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - smart-reader-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Vector Database Service
  vector-db:
    build: ./services/vector-db
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma
    depends_on:
      - mongodb
    volumes:
      - vector_data:/app/data/chroma
    restart: unless-stopped
    networks:
      - smart-reader-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # MongoDB
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=smart-reader
    restart: unless-stopped
    networks:
      - smart-reader-network
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - smart-reader-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # ChromaDB
  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    restart: unless-stopped
    networks:
      - smart-reader-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
    restart: unless-stopped
    networks:
      - smart-reader-network

volumes:
  mongodb_data:
  redis_data:
  chroma_data:
  uploads_data:
  cache_data:
  vector_data:

networks:
  smart-reader-network:
    driver: bridge
